<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys" xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon" xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.CustomTheme.v10.2;component/DevExpress.Xpf.Ribbon/CustomTheme/BarItems.xaml" />
    </ResourceDictionary.MergedDictionaries>
        <dxc:BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" Invert="False" />
    <dxc:BooleanToVisibilityConverter x:Key="inverseBooleanToVisibilityConverter" Invert="True" />
    <ItemsPanelTemplate x:Key="BarButtonGroupThemeKey_PanelTemplate">
        <dxr:BarButtonGroupItemsPanel />
    </ItemsPanelTemplate>

    <ControlTemplate x:Key="BarButtonGroupThemeKey_Template" TargetType="dxr:BarButtonGroupLinkControl">
        <ContentControl x:Name="PART_ResourceHolder" Template="{Binding Path=ResourceHolderTemplate, RelativeSource={RelativeSource TemplatedParent}}">
            <Grid>
                <dxb:ItemBorderControl x:Name="PART_ItemBorder" Template="{Binding Path=BorderTemplate, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=IsBorderVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource booleanToVisibilityConverter}}" />
                <StackPanel x:Name="PART_Item" Background="Transparent" Margin="{Binding Path=ActualMargin, RelativeSource={RelativeSource TemplatedParent}}" Orientation="Horizontal">
                    <dxr:BarButtonGroupItemsControl x:Name="PART_ItemsControl" />
                    <dxb:ItemBorderControl x:Name="PART_Separator" Template="{StaticResource BarButtonGroupThemeKey_SeparatorTemplate}" Visibility="{Binding Path=(dxr:RibbonPageGroupItemsPanel.IsEndOfRow), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource inverseBooleanToVisibilityConverter}}" />
                    <!--TODO: {DynamicResource {dxbt:BarItemThemeKey ResourceKey=Margin}} - to DefaultMargin in default style -->
                </StackPanel>
            </Grid>
        </ContentControl>
        <!--<ControlTemplate.Triggers>
            <Trigger Property="IsBorderVisible" Value="False">
                <Setter TargetName="PART_Item" Property="Margin" Value="0"/>
            </Trigger>
        </ControlTemplate.Triggers>-->
        <!--
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsLargeGlyph, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="image" Property="Width" Value="32"/>
                <Setter TargetName="image" Property="Height" Value="32"/>
                <Setter TargetName="image" Property="Stretch" Value="UniformToFill"/>
            </DataTrigger>
            <Trigger Property="dxb:LinksControl.LinkContainerType" Value="RibbonPageGroup">
                <Setter TargetName="glyph" Property="Width" Value="Auto"/>
                <Setter TargetName="glyph" Property="Height" Value="Auto"/>
            </Trigger>
            <Trigger Property="ShowCustomizationBorder" Value="True">
                <Setter Property="State" TargetName="item_border" Value="Customization"/>
                <Setter Property="Style" TargetName="content" Value="{Binding Path=NormalContentStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Trigger>
            <Trigger Property="ShowHotBorder" Value="True">
                <Setter Property="State" TargetName="item_border" Value="Hover"/>
                <Setter Property="Style" TargetName="content" Value="{Binding Path=HotContentStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Trigger>
            <Trigger Property="ShowPressedBorder" Value="True">
                <Setter Property="State" TargetName="item_border" Value="Pressed"/>
                <Setter Property="Style" TargetName="content" Value="{Binding Path=PressedContentStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Style" TargetName="content" Value="{Binding Path=DisabledContentStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
                <Setter Property="Opacity" TargetName="item1" Value="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=DisableStateOpacityValue}}"/>
            </Trigger>
            <Trigger Property="ActualShowGlyph" Value="True">
                <Setter Property="Visibility" TargetName="glyph" Value="Visible" />
            </Trigger>
            <Trigger Property="ActualShowContent" Value="False">
                <Setter Property="Visibility" TargetName="content" Value="Collapsed" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=Link.CustomizationIsVisible, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter Property="Opacity" TargetName="item1" Value="{DynamicResource {dxbt:BarItemThemeKey ResourceKey=DisableStateOpacityValue}}"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
        -->
    </ControlTemplate>
   
    <ControlTemplate x:Key="BarButtonGroupThemeKey_ItemsControlTemplate">
        <ItemsPresenter />
    </ControlTemplate>

</ResourceDictionary>