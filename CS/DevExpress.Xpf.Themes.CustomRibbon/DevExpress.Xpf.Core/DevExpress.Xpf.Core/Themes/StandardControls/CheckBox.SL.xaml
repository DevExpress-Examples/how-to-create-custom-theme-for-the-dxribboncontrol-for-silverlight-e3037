<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.CustomRibbon.v11.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/Brushes.SL.xaml" />
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.CustomRibbon.v11.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/SharedResources.SL.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="CheckBox">
        
        <Setter Property="Foreground" Value="{StaticResource Text.Foreground}" />
        <Setter Property="Background" Value="{StaticResource Button.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource Button.BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="4,0,0,0" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="StoryboardHover.Enter">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HoverState">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.20" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="CheckIcon">
                                <EasingColorKeyFrame KeyTime="0:0:0.20" Value="#FF042271" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="StoryboardHover.Exit">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HoverState">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.20" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="CheckIcon">
                                <EasingColorKeyFrame KeyTime="0:0:0.20" Value="#FF4C6198" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="StoryboardPressed.Enter">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedState">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="CheckIcon">
                                <EasingColorKeyFrame KeyTime="0:0:0.15" Value="#FF4C6198" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="StoryboardPressed.Exit">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedState">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid Width="14" Height="14" Grid.Column="0" Grid.ColumnSpan="1">
                            <Grid x:Name="FocusedState" Opacity="0">
                                <Border Style="{StaticResource CheckBoxFocusTemplate}" />
                            </Grid>
                            <Grid x:Name="DefaultState">
                                <Border Background="{StaticResource CheckBox.DefaultState.Border2}" BorderBrush="{StaticResource CheckBox.DefaultState.Border1}" BorderThickness="1">
                                    <Border Background="{StaticResource CheckBox.DefaultState.Border4}" BorderBrush="{StaticResource CheckBox.DefaultState.Border3}" BorderThickness="1" Margin="1" />
                                </Border>
                            </Grid>
                            <Grid x:Name="HoverState" Opacity="0">
                                <Border Background="{StaticResource CheckBox.HoverState.Border2}" BorderBrush="{StaticResource CheckBox.HoverState.Border1}" BorderThickness="1">
                                    <Border Background="{StaticResource CheckBox.HoverState.Border4}" BorderBrush="{StaticResource CheckBox.HoverState.Border3}" BorderThickness="1" Margin="1" />
                                </Border>
                            </Grid>
                            <Grid x:Name="PressedState" Opacity="0">
                                <Border Background="{StaticResource CheckBox.PressedState.Border2}" BorderBrush="{StaticResource CheckBox.PressedState.Border1}" BorderThickness="1">
                                    <Border Background="{StaticResource CheckBox.PressedState.Border4}" BorderBrush="{StaticResource CheckBox.PressedState.Border3}" BorderThickness="1" Margin="1" />
                                </Border>
                            </Grid>
                            <Grid x:Name="DisabledState" Opacity="0">
                                <Border Background="{StaticResource CheckBox.DisabledState.Border2}" BorderBrush="{StaticResource CheckBox.DisabledState.Border1}" BorderThickness="1" />
                            </Grid>
                            <Border x:Name="IndeterminateState" Background="{StaticResource CheckBox.IndeterminateState.Border2}" BorderBrush="{StaticResource CheckBox.IndeterminateState.Border1}" BorderThickness="1" Width="10" Height="10" CornerRadius="1" Padding="1" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0" />
                            <Path x:Name="CheckIcon" Fill="#FF4C6198" Style="{StaticResource CheckBoxIconTemplate}" Opacity="0" />
                        </Grid>
                        <ContentPresenter x:Name="ContentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.Column="1" Grid.ColumnSpan="1" />
                    </Grid>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>